package common

import (
	//"math/big"
	//"reflect"
	"testing"
	//"time"
	//"log"
)

func TestC정수(테스트 *testing.T) {
	초기값 := int64(10)
	예상값 := int64(10)

	// 생성자 테스트
	var c정수 C정수 = NC정수(초기값)

	// G값() 테스트
	F같은값_확인(테스트, c정수.G값(), 예상값)

	// 초기값 변경 후 독립성이 유지되는 지 확인.
	초기값 = 초기값 + 10
	F같은값_확인(테스트, c정수.G값(), 예상값)

	// G값() 결과물 변경 후 독립성이 유지되는 지 확인.
	정수값 := c정수.G값()
	정수값 = 정수값 + 10 // G값()으로 읽어온 변수를 변경.

	F같은값_확인(테스트, c정수.G값(), 예상값)

	switch c정수.(type) {
	case I변수형:
		테스트.Error("common.TestC정수() : 상수형이 변수형과 혼동될 수 있음.")
	}
}

func TestC부호없는_정수(테스트 *testing.T) {
	초기값 := uint64(10)
	예상값 := uint64(10)

	// 생성자 테스트
	var c부호없는_정수 C부호없는_정수 = NC부호없는_정수(초기값)

	// G값() 테스트
	F같은값_확인(테스트, c부호없는_정수.G값(), 예상값)

	// 초기값 변경 후 독립성이 유지되는 지 확인.
	초기값 = 초기값 + 10

	F같은값_확인(테스트, c부호없는_정수.G값(), 예상값)

	// G값() 결과물 변경 후 독립성이 유지되는 지 확인.
	부호없는_정수값 := c부호없는_정수.G값()
	부호없는_정수값 = 부호없는_정수값 + 10 // G값()으로 읽어온 변수를 변경.

	F같은값_확인(테스트, c부호없는_정수.G값(), 예상값)
	
	switch c부호없는_정수.(type) {
	case I변수형:
		테스트.Error("common.TestC부호없는_정수() : 상수형이 변수형과 혼동될 수 있음.")
	}
}

func TestC실수(테스트 *testing.T) {
	초기값 := float64(10.0)
	예상값 := float64(10.0)

	// 생성자 테스트
	var c실수 C실수 = NC실수(초기값)

	// G값() 테스트
	F같은값_확인(테스트, c실수.G값(), 예상값)

	// 초기값 변경 후 독립성이 유지되는 지 확인.
	초기값 = 초기값 + 10

	F같은값_확인(테스트, c실수.G값(), 예상값)

	// G값() 결과물 변경 후 독립성이 유지되는 지 확인.
	실수값 := c실수.G값()
	실수값 = 실수값 + 10.0 // G값()으로 읽어온 변수를 변경.

	F같은값_확인(테스트, c실수.G값(), 예상값)

	switch c실수.(type) {
	case I변수형:
		테스트.Error("common.TestC실수() : 상수형이 변수형과 혼동될 수 있음.")
	}
}

func TestC문자열(테스트 *testing.T) {
	초기값 := "테스트 문자열"
	예상값 := "테스트 문자열"

	// 생성자 테스트
	var c문자열 C문자열 = NC문자열(초기값)

	// G값() 테스트
	F같은값_확인(테스트, c문자열.G값(), 예상값)

	// 초기값 변경 후 독립성이 유지되는 지 확인.
	초기값 = 초기값 + "추가 문자열"

	F같은값_확인(테스트, c문자열.G값(), 예상값)

	// G값() 결과물 변경 후 독립성이 유지되는 지 확인.
	문자열값 := c문자열.G값()
	문자열값 = 문자열값 + "추가 문자열" // G값()으로 읽어온 변수를 변경.

	F같은값_확인(테스트, c문자열.G값(), 예상값)

	switch c문자열.(type) {
	case I변수형:
		테스트.Error("common.TestC문자열() : 상수형이 변수형과 혼동될 수 있음.")
	}
}

func TestC참거짓(테스트 *testing.T) {
	초기값 := true
	예상값 := true

	// 생성자 테스트
	var c참거짓 C참거짓 = NC참거짓(초기값)

	// G값() 테스트
	F같은값_확인(테스트, c참거짓.G값(), 예상값)

	// 초기값 변경 후 독립성이 유지되는 지 확인.
	초기값 = !초기값

	F같은값_확인(테스트, c참거짓.G값(), 예상값)

	// G값() 결과물 변경 후 독립성이 유지되는 지 확인.
	참거짓값 := c참거짓.G값()
	참거짓값 = !참거짓값 // G값()으로 읽어온 변수를 변경.

	F같은값_확인(테스트, c참거짓.G값(), 예상값)

	switch c참거짓.(type) {
	case I변수형:
		테스트.Error("common.TestC참거짓() : 상수형이 변수형과 혼동될 수 있음.")
	}
}