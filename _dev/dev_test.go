package temp

import (
	//. "exp/kr/common"
	"fmt"
	"math/big"
	"reflect"
	"testing"
	"time"
)

type s테스트_값_복사1 struct {
	정수값  int
	문자열값 string
	큰정수값 *big.Int
	정밀수값 *big.Rat
}

func (s s테스트_값_복사1) G값_복사본() interface{} {
	var i interface{}

	i = s.큰정수값
	큰정수값_복사본 := F값_복사(i).(*big.Int)

	i = s.정밀수값
	정밀수값_복사본 := F값_복사(i).(*big.Rat)

	return &s테스트_값_복사1{s.정수값, s.문자열값, 큰정수값_복사본, 정밀수값_복사본}
}

type s테스트_값_복사2 struct {
	정수값      int
	문자열값     string
	큰정수값     *big.Int
	정밀수값     *big.Rat
	구조체값     s테스트_값_복사1
	구조체_포인터값 *s테스트_값_복사1
}

func (s *s테스트_값_복사2) G값_복사본() *s테스트_값_복사2 {
	var i interface{}

	i = s.큰정수값
	큰정수값_복사본 := F값_복사(i).(*big.Int)

	i = s.정밀수값
	정밀수값_복사본 := F값_복사(i).(*big.Rat)

	구조체값_복사본 := s.구조체값.G값_복사본().(*s테스트_값_복사1)
	구조체_포인터값_복사본 := s.구조체_포인터값.G값_복사본().(*s테스트_값_복사1)

	return &s테스트_값_복사2{s.정수값, s.문자열값,
		큰정수값_복사본, 정밀수값_복사본,
		*구조체값_복사본, 구조체_포인터값_복사본}
}

func TestF값_복사(테스트 *testing.T) {
	fmt.Println("")
	fmt.Println("		1. 복사본 자동 생성")
	fmt.Println("		2. 모든 메소드를 실행.")
	fmt.Println("		3. 내부 멤버필드 값이 변했는 지 확인.")
	fmt.Println("")

	i := 1

	F체크포인트(&i, "int 복사값 일치 확인")
	int_원본 := int(100)
	int_복사본 := F값_복사(int(100)).(int)
	F같은값_확인(테스트, int_원본, int_복사본)

	F체크포인트(&i, "int 복사값 독립성 확인")
	int_원본++
	F다른값_확인(테스트, int_원본, int_복사본)

	/*
		//F체크포인트(&i, "uint 복사값 일치 확인")
		uint_원본 := uint(100)
		uint_복사본 := F값_복사(uint_원본).(uint)
		F같은값_확인(테스트, uint_원본, uint_복사본)

		//F체크포인트(&i, "uint 복사값 독립성 확인")
		uint_원본++
		F다른값_확인(테스트, uint_원본, uint_복사본)

		/*
		//F체크포인트(&i, "float64 복사값 일치 확인")
		float64_원본 := float64(100.1)
		float64_복사본 := F값_복사(float64_원본).(float64)
		F같은값_확인(테스트, float64_원본, float64_복사본)

		//F체크포인트(&i, "float64 복사값 독립성 확인")
		float64_원본++
		F다른값_확인(테스트, float64_원본, float64_복사본)

		/*
		//F체크포인트(&i, "bool 복사값 일치 확인")
		bool_원본 := true
		bool_복사본 := F값_복사(bool_원본).(bool)
		F같은값_확인(테스트, bool_원본, bool_복사본)

		//F체크포인트(&i, "bool 복사값 독립성 확인")
		bool_원본 = !bool_원본
		F다른값_확인(테스트, bool_원본, bool_복사본)

		/*
		//F체크포인트(&i, "string 복사값 일치 확인")
		string_원본 := "테스트_원본"
		string_복사본 := F값_복사(string_원본).(string)
		F같은값_확인(테스트, string_원본, string_복사본)

		//F체크포인트(&i, "string 복사값 독립성 확인")
		string_원본 = string_원본 + "2"
		F다른값_확인(테스트, string_원본, string_복사본)

		/*
		//F체크포인트(&i, "time 복사값 일치 확인")
		time_원본 := time.Now()
		time_복사본 := F값_복사(time_원본).(time.Time)
		F같은값_확인(테스트, time_원본, time_복사본)

		//F체크포인트(&i, "time 복사값 독립성 확인")
		time_원본 = time_원본.AddDate(0, 0, 1)
		F다른값_확인(테스트, time_원본, time_복사본)

		/*
		//F체크포인트(&i, "시점 복사값 일치 확인")
		시점_원본 := time.Now()
		시점_복사본 := F값_복사(시점_원본).(time.Time)
		F같은값_확인(테스트, 시점_원본, 시점_복사본)

		//F체크포인트(&i, "시점 복사값 독립성 확인")
		시점_원본 = 시점_원본.AddDate(0, 0, 1)
		F다른값_확인(테스트, 시점_원본, 시점_복사본)

		/*
		F체크포인트(&i, "큰정수 구조체 복사값 일치 확인")
		임시값 := big.NewInt(100)
		큰정수_구조체_원본 := *임시값
		큰정수_구조체_복사본 := F값_복사(큰정수_구조체_원본).(big.Int)
		F같은값_확인(테스트, 큰정수_구조체_원본, 큰정수_구조체_복사본)

		F체크포인트(&i, "큰정수 구조체 복사값 독립성 확인")
		큰정수_구조체_원본.Add(&큰정수_구조체_원본, big.NewInt(200))
		F다른값_확인(테스트, 큰정수_구조체_원본, 큰정수_구조체_복사본)

		/*
		F체크포인트(&i, "큰정수 복사값 일치 확인")
		큰정수_원본 := big.NewInt(100)
		큰정수_복사본 := F값_복사(큰정수_원본).(*big.Int)
		F같은값_확인(테스트, 큰정수_원본, 큰정수_복사본)

		F체크포인트(&i, "큰정수 복사값 독립성 확인")
		큰정수_원본.Add(큰정수_원본, big.NewInt(200))
		F다른값_확인(테스트, 큰정수_원본, 큰정수_복사본)

		/*
		F체크포인트(&i, "정밀수 구조체 복사값 일치 확인")
		임시값 := big.NewRat(100,1)
		정밀수_구조체_원본 := *임시값
		정밀수_구조체_복사본 := F값_복사(정밀수_구조체_원본).(big.Rat)
		F같은값_확인(테스트, 정밀수_구조체_원본, 정밀수_구조체_복사본)

		F체크포인트(&i, "정밀수 구조체 복사값 독립성 확인")
		정밀수_구조체_원본.Add(&정밀수_구조체_원본, big.NewRat(200,1))
		F다른값_확인(테스트, 정밀수_구조체_원본, 정밀수_구조체_복사본)

		F체크포인트(&i, "정밀수 복사값 일치 확인")
		정밀수_원본 := big.NewRat(100,1)
		정밀수_복사본 := F값_복사(정밀수_원본).(*big.Rat)
		F같은값_확인(테스트, 정밀수_원본, 정밀수_복사본)

		F체크포인트(&i, "정밀수 복사값 독립성 확인")
		정밀수_원본.Add(정밀수_원본, big.NewRat(200,1))
		F다른값_확인(테스트, 정밀수_원본, 정밀수_복사본)

		F체크포인트(&i, "정밀수 복사값 일치 확인")
		정밀수_원본 := big.NewRat(100, 1)
		정밀수_복사본 := F값_복사(정밀수_원본).(*big.Rat)
		F같은값_확인(테스트, 정밀수_원본, 정밀수_복사본)

		F체크포인트(&i, "정밀수 복사값 독립성 확인")
		정밀수_원본 = 정밀수_원본.Add(정밀수_원본, big.NewRat(200, 1))
		F다른값_확인(테스트, 정밀수_원본, 정밀수_복사본)



		bigInt_원본 := big.NewInt(1000)
		bigInt_복사본 := F값_복사(bigInt_원본).(*big.Int)
		F같은값_확인(테스트, bigInt_복사본, big.NewInt(1000))

		bigInt_원본.Add(bigInt_원본, big.NewInt(10))
		F다른값_확인(테스트, bigInt_원본, bigInt_복사본)	// big.Int 복사본과 독립성 확인

		bigRat_원본 := big.NewRat(10001, 10)
		bigRat_복사본 := F값_복사(bigRat_원본).(*big.Rat)
		F같은값_확인(테스트, bigRat_복사본, big.NewRat(10001, 10))

		bigRat_원본.Add(bigRat_원본, big.NewRat(10, 1))
		F다른값_확인(테스트, bigRat_원본, bigRat_복사본)


		F체크포인트(&i, "구조체1 복사값 일치 확인")

		구조체1 := s테스트_값_복사1{100, "테스트", big.NewInt(1000), big.NewRat(10001, 10)}
		구조체1_복사본 := F값_복사(구조체1).(*s테스트_값_복사1)
		F같은값_확인(테스트, 구조체1, *구조체1_복사본)

		F체크포인트(&i, "구조체1 복사값 독립성 확인 정수값(값) 변경")
		구조체1.정수값++
		F다른값

		F체크포인트(&i, "구조체1 복사값 독립성 확인 big정수값(포인터) 변경")

		F체크포인트(&i, "구조체_포인터1 복사값 일치 확인")

		구조체_포인터값1 := &s테스트_값_복사1{200, "테스트", big.NewInt(2000), big.NewRat(20001, 20)}
		구조체_포인터값1_복사본 := F값_복사(구조체_포인터값1).(*s테스트_값_복사1)
		F같은값_확인(테스트, 구조체_포인터값1, 구조체_포인터값1_복사본)

		구조체2 := s테스트_값_복사2{100, "테스트", big.NewInt(1000), big.NewRat(10001, 10), 구조체1, 구조체_포인터값1}
		구조체2_복사본 := F값_복사(구조체2).(s테스트_값_복사2)
		F같은값_확인(테스트, 구조체2, 구조체2_복사본)

		F체크포인트(&i, "")

		구조체_포인터값2 := &s테스트_값_복사2{200, "테스트", big.NewInt(2000), big.NewRat(20001, 20), 구조체1, 구조체_포인터값1}
		구조체_포인터값2_복사본 := F값_복사(구조체_포인터값2).(*s테스트_값_복사2)
		F같은값_확인(테스트, 구조체_포인터값2, 구조체_포인터값2_복사본)

		F체크포인트(&i, "")

		// 구조체는 값 멤버 필드에 대해서 복사본과 독립성을 유지한다.
		구조체1.정수값++
		F다른값_확인(테스트, 구조체1, 구조체1_복사본)

		F체크포인트(&i, "")

		구조체1.정수값--
		F같은값_확인(테스트, 구조체1, 구조체1_복사본)

		F체크포인트(&i, "")

		// 구조체는 포인터 멤버 필드에 대해서 복사본과 독립성을 유지하지 못한다.
		// 복사본이 가지고 있는 것은 포인터의 복사본인 듯.
		// 구조체가 복사본과 독립성을 유지하려면 해당 멤버 필드도 복사 후 독립성을 유지하는 타입이어야 함.
		구조체1.큰정수값.Add(구조체1.큰정수값, big.NewInt(1))
		F다른값_확인(테스트, 구조체1, 구조체1_복사본)

		F체크포인트(&i, "")

		// 구조체 포인터는 복사본과 독립성이 없다. 포인터이니까 당연한 결과인 듯.
		//구조체_포인터값1.M정수값++
		F다른값_확인(테스트, 구조체_포인터값1, 구조체_포인터값1_복사본)

		F체크포인트(&i, "")


		// 결론. 독립성을 가진 복사본을 만들려면
		// '포인터'는 *로 값을 취해서 복사본을 만든 후,
		// 다시 &로 포인터로 되돌려야 한다.
		// 구조체는 내부 멤버를 조사해서 포인터 값일 경우 앞에서 한 대로 해야 한다.
		// 이것은 내부 구조로 recursive 하게 해야 한다.

		fmt.Printf("종류 %v, 형식 %v \n", reflect.TypeOf(1).Kind(), reflect.TypeOf(1))
	*/
}

func TestHoldImport(테스트 *testing.T) {
	fmt.Println("")
	reflect.TypeOf(0)
	time.Now()
}

func TestF메모_temp(테스트 *testing.T) {
	F나를_위한_문구_dev()
	//F메모_temp()
}
